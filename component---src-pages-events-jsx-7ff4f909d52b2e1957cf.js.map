{"version":3,"sources":["webpack:///./src/components/images/events_background.jsx","webpack:///./src/components/events/upcomingEvents.jsx","webpack:///./src/components/events/pastEvents.jsx","webpack:///./src/components/events/pastEventsBlog.jsx","webpack:///./src/pages/events.jsx"],"names":["BackgroundSection","className","children","query","render","data","imageData","desktop","childImageSharp","fluid","style","backgroundAttachment","UpcomingEvents","allEventbriteEvents","size","edges","length","map","node","summary","shortenText","fontFamily","transition","href","url","key","id","target","rel","name","text","start","local","online_event","venue","address","address_1","city","postal_code","backgroundImage","logo","original","backgroundPosition","backgroundSize","bottom","right","PastEvents","pastEvent","background","onClick","window","open","PastEventsBlog","pastEventBlog","description","frontmatter","to","fields","slug","title","date","events","eventBrite","useState","moment","format","currentDate","setDate","useEffect","keywords"],"mappings":"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","file":"component---src-pages-events-jsx-7ff4f909d52b2e1957cf.js","sourcesContent":["import React from \"react\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\nimport BackgroundImage from 'gatsby-background-image'\r\nimport PropTypes from 'prop-types'\r\n\r\n/*\r\n * This component is built using `gatsby-image` to automatically serve optimized\r\n * images with lazy loading and reduced file sizes. The image is loaded using a\r\n * `useStaticQuery`, which allows us to load the image from directly within this\r\n * component, rather than having to pass the image data down from pages.\r\n *\r\n * For more information, see the docs:\r\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\r\n * - `useStaticQuery`: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nconst BackgroundSection = ({className, children}) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        desktop: file(relativePath: { eq: \"events/chair.jpg\" }) {\r\n          childImageSharp {\r\n            fluid(quality: 70, maxWidth: 1920) {\r\n              ...GatsbyImageSharpFluid_noBase64\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => {\r\n      // Set ImageData.\r\n      const imageData = data.desktop.childImageSharp.fluid\r\n      return (\r\n        <BackgroundImage\r\n        className={className}\r\n        fluid={imageData}\r\n        style={{backgroundAttachment: 'fixed'}}\r\n        >\r\n        {children}\r\n        </BackgroundImage>\r\n      )\r\n    }}\r\n  />\r\n)\r\n\r\nBackgroundSection.propTypes = {\r\n  className: PropTypes.any,\r\n  children: PropTypes.node,\r\n  style: PropTypes.any,\r\n}\r\n\r\nexport default BackgroundSection","import React from 'react'\r\nimport PropTypes from \"prop-types\"\r\nimport { FaMapMarkerAlt, FaClock } from \"react-icons/fa\"\r\nimport { shortenText } from \"../../utils/shared\"\r\n\r\nconst UpcomingEvents = ({allEventbriteEvents}) => {\r\n  let size = allEventbriteEvents.edges.length\r\n  \r\n  if(allEventbriteEvents && (size > 0)) {\r\n    return (\r\n      <> \r\n      {allEventbriteEvents.edges.map(({node}) => {\r\n        //moment(node.start.local, \"DD-MMMM-YYYY hh:mm\") >= moment() && \r\n        let summary = shortenText(node.summary, 20)\r\n\r\n        return (\r\n          <a className=\"flex flex-wrap w-full overflow-y-hidden shadow-lg hover:shadow-2xl bg-white my-3 lg:my-1 text-gray-700 group border-solid\" \r\n            style={{fontFamily: \"TUoS Blake\", transition: \".5s ease\"}} href={node.url} key={node.id} target=\"_blank\" rel=\"noopener noreferrer\"\r\n          >\r\n            <div className=\"w-full md:w-9/12 py-4 px-4\">\r\n              <p className=\"font-semibold text-lg text-black group-hover:text-highlight_2 leading-5\">{node.name.text}</p>\r\n              <p className=\"text-gray-700 mt-1 leading-tight text-sm group-hover:text-black\">{summary}</p>\r\n              <p className=\"flex pt-4 text-sm\"><FaClock className=\"mr-1\" />{node.start.local}</p>\r\n              \r\n              <div className=\"flex flex-wrap text-sm\">\r\n                  <p className=\"flex\">{node.online_event && (<FaMapMarkerAlt className=\"mr-1 mt-1\" />)} {node.online_event && (\"Online Event\") }</p>\r\n                  <p className=\"flex\">\r\n                    {node.venue && ( <FaMapMarkerAlt className=\"mr-1 mt-1\" /> )} \r\n                    {node.venue && node.venue.name && (node.venue.name + \", \")} \r\n                    {node.venue && node.venue.address.address_1 && (node.venue.address.address_1 + \", \")} \r\n                    {node.venue && node.venue.address.city && (node.venue.address.city + \", \")}\r\n                    {node.venue && node.venue.address.postal_code && (node.venue.address.postal_code)}\r\n                  </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"w-full md:w-3/12 overflow-hidden relative min-h-20 2xl:min-h-15\" style={{backgroundImage: `url(${node.logo.original.url})`, backgroundPosition: 'center', backgroundSize: 'cover', transition: '.5s ease'}}>\r\n              <button href={node.url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"hidden group-hover:flex py-1 px-3 font-bold text-md bg-black text-white hover:bg-blue-700 absolute\" style={{bottom: '0%', right: '0%', }}>\r\n                Register\r\n              </button>\r\n            </div>\r\n          </a> \r\n        )\r\n        \r\n      })}\r\n      </>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className=\"mt-16 text-blue-800\">No upcoming events at the moment, please come back later.</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default UpcomingEvents\r\n\r\nUpcomingEvents.propTypes = {\r\n  allEventbriteEvents: PropTypes.any,\r\n}\r\n\r\n","import React from 'react'\r\nimport PropTypes from \"prop-types\"\r\nimport { BlackWhiteButton } from \"../style/styled\"\r\nimport { shortenText } from \"../../utils/shared\"\r\n\r\nconst PastEvents = ({pastEvent}) => {\r\n  \r\n  return (\r\n    <div className=\"w-full md:w-4/5 lg:w-4/12 2xl:w-3/12 lg:rounded-r-xl md:mt-10 lg:mt-0 p-6 pb-8 text-gray-100 border-t-8 border-gray-800 min-h-50\" style={{background: \"rgba(0,0,0,.8)\", }}>\r\n      <h1 className=\"text-xl pt-2 pb-6 font-semibold\">Past Events</h1>\r\n      \r\n      {pastEvent.edges.map(({ node }) => {\r\n        let summary = shortenText(node.summary, 15)\r\n\r\n        return (\r\n          <div className=\"flex flex-wrap p-3 w-full overflow-hidden bg-white group pastEvent\" key={node.id}>\r\n            <a href={node.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <p style={{ fontFamily: \"TUoS Blake\",}} className=\"font-semibold text-md text-black leading-4\">{node.name.text}</p>\r\n            <p className=\"text-gray-700 text-xs leading-4 mt-1\">{summary}</p>\r\n            <p className=\"mt-2 text-xs text-black\">{node.start.local}</p>\r\n            </a>\r\n          </div>\r\n        )\r\n      })} \r\n      {\r\n        pastEvent.edges.length > 0 && \r\n        <div className=\"flex justify-center w-full\">\r\n          <BlackWhiteButton onClick={()=>window.open(\"https://www.eventbrite.co.uk/o/scholarly-communications-team-the-university-of-sheffield-library-7528476001\", \"_blank\", \"noopener, noreferrer\")} \r\n            className=\"w-full mt-0 hover:bg-blue-800 hover:text-white\"\r\n          >\r\n            More events\r\n          </BlackWhiteButton>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n\r\n\r\n  \r\n}\r\n\r\nexport default PastEvents\r\n\r\nPastEvents.propTypes = {\r\n  pastEvent: PropTypes.any,\r\n}\r\n\r\n","import React from 'react'\r\nimport PropTypes from \"prop-types\"\r\nimport { Link } from \"gatsby\"\r\nimport { shortenText } from \"../../utils/shared\"\r\n\r\nconst PastEventsBlog = ({pastEventBlog}) => {\r\n  \r\n  return (\r\n    <div className=\"w-full md:w-11/12 2xl:w-10/12 px-6 lg:mt-6 lg:mb-16 pb-8 lg:py-6 border-t-8 border-gray-800 min-h-50 rounded-xl\" style={{background: \"rgba(255,255,255,.9)\", }}>\r\n      <h1 className=\"text-2xl pt-2 pb-6 font-semibold\">Event articles</h1>\r\n      \r\n      {pastEventBlog.edges.map(({ node }) => {\r\n        let description = shortenText(node.frontmatter.description, 20)\r\n\r\n        return (\r\n          <div className=\"flex flex-wrap transition duration-500 overflow-hidden p-3 md:w-1/2 lg:w-1/4 rounded-md bg-white group hover:border-1 hover:border-gray-600 border-1 border-white\" key={node.id}>\r\n            <Link to={node.fields.slug}>\r\n            <p style={{ fontFamily: \"TUoS Blake\",}} className=\"font-bold text-black leading-5\">{node.frontmatter.title}</p>\r\n            <p className=\"text-gray-700 mt-1 text-sm leading-4\">{description}</p>\r\n            <p className=\"mt-2 text-sm text-black\">{node.frontmatter.date}</p>\r\n            </Link>\r\n          </div>\r\n        )\r\n\r\n      })} \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PastEventsBlog\r\n\r\nPastEventsBlog.propTypes = {\r\n  pastEventBlog: PropTypes.any,\r\n}\r\n\r\n","import React, {useState, useEffect} from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport SEO from \"../components/shared/seo\"\r\nimport Header from \"../components/shared/header\"\r\nimport Footer from \"../components/shared/footer\"\r\nimport BackgroundSection from \"../components/images/events_background\"\r\nimport PropTypes from \"prop-types\"\r\nimport UpcomingEvents from \"../components/events/upcomingEvents\"\r\nimport PastEvents from \"../components/events/pastEvents\"\r\nimport PastEventsBlog from \"../components/events/pastEventsBlog\"\r\nimport moment from \"moment\"\r\n\r\nconst events = ({data: {eventBrite, pastEvent, pastEventBlog}}) => {\r\n\r\n  const [currentDate, setDate] = useState(moment().format('ddd DD MMMM YYYY, hh:mm A'));\r\n  useEffect(() => {\r\n    setDate(moment().format('ddd DD MMMM YYYY, hh:mm A'))\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <SEO \r\n        title=\"Events\" \r\n        keywords={[\"the university of sheffield\", \"data visualisation\", \"data visualisation hub\", \"research\", \"dataviz events\", \"dataviz.shef\"]} \r\n      />\r\n      <Header />\r\n      <BackgroundSection className=\"flex flex-wrap flex-grow-0 items-center justify-center min-h-100\">\r\n        <div className=\"flex flex-wrap w-full justify-center my-16 lg:my-24\">\r\n          <div className=\"w-full lg:w-7/12 p-6 text-black overflow-auto border-t-8 border-red-700 min-h-70 lg:rounded-l-xl\" style={{background: \"rgba(255,255,255,.95)\", }}>\r\n            <h1 className=\"inline-block text-2xl font-semibold\">Upcoming Events</h1>\r\n            <div className=\"text-gray-900 mb-8\" >Today: {currentDate}</div>\r\n            <UpcomingEvents allEventbriteEvents={eventBrite} />\r\n          </div>\r\n          <PastEvents pastEvent={pastEvent} />\r\n        </div>\r\n        <PastEventsBlog pastEventBlog={pastEventBlog} /> \r\n      </BackgroundSection>\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default events\r\n\r\nevents.propTypes = {\r\n\t\tdata: PropTypes.any\r\n  }\r\n  \r\n  \r\n\r\nexport const query = graphql`\r\n  query {\r\n    eventBrite: \r\n    allEventbriteEvents(limit: 4, sort: {fields: start___local, order: ASC}, filter: {id: {ne: \"777\"}, isFuture: {eq: true}}) {\r\n      ...EventbriteEventsEdge\r\n    }\r\n\r\n    pastEvent: \r\n    allEventbriteEvents(limit: 5, sort: {fields: start___local, order: DESC}, filter: {id: {ne: \"777\"}, isFuture: {eq: false}}) {\r\n      ...EventbriteEventsEdge\r\n    }\r\n\r\n    pastEventBlog: \r\n    allMdx(limit: 5, filter: {frontmatter: {category: {in: \"Events\"}, hide: {ne: \"true\"} }}, sort: {order: DESC, fields: frontmatter___date}) {\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n            readingTime {\r\n              text\r\n            }\r\n          }\r\n          id\r\n          frontmatter {\r\n            date(formatString: \"dddd, DD MMMM YYYY\")\r\n            title\r\n            description\r\n          }\r\n        }\r\n      }\r\n    }\r\n  \r\n  }\r\n`;\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}