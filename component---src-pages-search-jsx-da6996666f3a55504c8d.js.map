{"version":3,"sources":["webpack:///./src/images/search/bg.jpg","webpack:///./src/components/shared/search.jsx","webpack:///./src/pages/search.jsx","webpack:///./src/images/blog/no_image_1.png","webpack:///./src/images/blog/no_image_5.png","webpack:///./src/images/blog/no_image_2.png","webpack:///./src/images/blog/no_image_3.png","webpack:///./src/images/blog/no_image_4.png","webpack:///./src/utils/shared.jsx"],"names":["module","exports","Search","state","query","results","componentDidMount","setTimeout","props","location","searchWord","queryHome","input","document","getElementById","setState","setAttribute","searchFromHome","search","event","target","value","length","getSearchResults","homeQuery","render","className","this","classNames","style","backgroundImage","bg","backgroundSize","width","top","duration","cascade","bottom","id","onChange","onInput","autoComplete","minWidth","type","name","placeholder","data","useStaticQuery","map","item","i","imagesrc","allMdx","edges","node","getImageSource","title","shortenText","description","highlightClasses","href","url","rel","key","backgroundPosition","borderRadius","maxWidth","highlightClassName","textToHighlight","searchWords","split","textShadow","author","arr","concat","category","toUpperCase","tag","slice","index","window","__FLEXSEARCH__","en","store","Object","keys","forEach","idx","push","values","suggest","Array","from","Set","filter","includes","Component","searchPage","keywords","text","newText","splice","join","frontmatter","thumbnail","childImageSharp","fluid","src","image_set","no_image_1","no_image_2","no_image_3","no_image_4","no_image_5","Math","floor","random"],"mappings":"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","file":"component---src-pages-search-jsx-da6996666f3a55504c8d.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/bg-d2e315389be310ad1df988334939fa79.jpg\";","import React, { Component } from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport PropTypes from \"prop-types\"\nimport {FiSearch} from \"react-icons/fi\"\nimport Highlighter from 'react-highlight-words';\nimport Zoom from 'react-reveal/Zoom'\nimport Fade from 'react-reveal/Fade'\nimport bg from \"../../images/search/bg.jpg\"\nimport { getImageSource, shortenText } from \"../../utils/shared\"\n\n\n// Search component\nclass Search extends Component {\n\n  state = {\n    query: '',\n    results: [],\n  }\n\n  componentDidMount = () => {\n    setTimeout(() => {\n      if(this.props.location.state && this.props.location.state.searchWord) {\n        var queryHome = this.props.location.state.searchWord\n        var input = document.getElementById(\"pageSearch\")\n        this.setState({query: queryHome})\n        input.setAttribute(\"value\", queryHome)\n        this.searchFromHome(queryHome)\n      }\n    }, 100);\n  }\n\n  render() {\n    const ResultList = () => {\n      // query length changed from 2 to 0\n      if (this.state.results.length > 0 && this.state.query.length > 0) {\n        const data = useStaticQuery(graphql`\n          query postList {\n            allMdx(sort: {fields: [frontmatter___date], order: DESC}) {\n              edges {\n                node {\n                  id\n                  frontmatter {\n                    date(formatString: \"ddd, DD MMM YYYY\")\n                    thumbnail {\n                      childImageSharp {\n                        fluid {\n                          src\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        `)\n\n        return (\n          <div>\n            <div className=\"bg-orange-700 text-gray-100 py-2\">Found {this.state.results.length} results for you.</div>\n\n            <div className=\"flex flex-wrap py-10 xl:pt-32 xl:pb-64 justify-center bg-gray-100\">\n              {this.state.results.map((item, i) => {\n                let imagesrc\n                {data.allMdx.edges.map(({ node }) => {\n                  if(item.id == node.id){\n                    imagesrc = getImageSource(node);\n                  }\n                })}\n\n                let title = shortenText(item.title, 8);\n                let description = shortenText(item.description, 30)\n                const highlightClasses = \"text-blue-400 bg-black\"\n\n                return( \n\n                  <a href={`${item.url}`} target=\"_blank\" rel=\"noopener noreferrer\" key={i}>\n                    <div style={{width: \"363px\", backgroundImage: `url(${imagesrc})`, backgroundSize: \"cover\", backgroundPosition: \"center\", borderRadius: \"15px\"}} className=\"group text-left relative shadow-c1 hover:shadow-c2 rounded-lg min-h-50 2xl:min-h-40 mx-6 my-6 transform hover:scale-105 transition duration-500\">\n                      <div className=\"min-h-60 2xl:min-h-40 max-h-60 w-full p-6 transition duration-700 bg-black-55 group-hover:bg-black-85\" style={{borderRadius: \"15px\"}}>\n                        <div className=\"absolute pt-8 lg:pt-16 2xl:pt-24 overflow-hidden\" style={{maxWidth:\"320px\"}}>\n                          <h1 className=\"group-hover:-translate-y-8 text-white font-bold leading-7 text-2xl transform transition duration-100\">\n                            <Highlighter highlightClassName={highlightClasses} textToHighlight={title} searchWords={this.state.query.split()} />\n                          </h1>  \n                          <h1 className=\"group-hover:hidden text-gray-400 leading-7 my-4 font-bold text-lg transition duration-500\" style={{textShadow: \"#000 0px 0px 30px\"}}>\n                            {item.author.map((author, i, arr) => {\n                              return ( <Highlighter className=\"text-white\" highlightClassName={highlightClasses} textToHighlight={arr.length - 1 === i ? author : author.concat(\", \")} searchWords={this.state.query.split()} key={author} /> )\n                            })}\n                          </h1>\n                          <h1 className=\"group-hover:hidden text-gray-400 font-bold transition duration-500\">\n                            CAT: &nbsp;\n                            <Highlighter className=\"text-white\" highlightClassName={highlightClasses} textToHighlight={item.category[0].toUpperCase()} searchWords={this.state.query.split()} />\n                          </h1>\n                          <h1 className=\"group-hover:hidden text-gray-400 font-bold transition duration-500\">\n                            TAG: &nbsp;{item.tag.map((tag, i, arr) => {\n                              return ( i < 3 && <Highlighter className=\"text-white\" highlightClassName={highlightClasses} textToHighlight={arr.length - 1 === i ? tag.toUpperCase() : tag.toUpperCase().concat(\", \")} searchWords={this.state.query.split()} key={tag} /> )\n                            })}\n                            {item.tag.length > 3 && <p className=\"inline-block text-white\"> +{item.tag.length - 3} more</p>}\n                          </h1>\n                          <p className=\"hidden group-hover:block my-4 text-xs text-gray-500 w-full font-semibold transform group-hover:-translate-y-12 transition duration-500\"><Highlighter highlightClassName={highlightClasses} textToHighlight={item.url.slice(5,).toUpperCase()} searchWords={this.state.query.split()} /></p>\n                          <h1 className=\"hidden group-hover:block text-white leading-5 text-lg py-3 transform group-hover:-translate-y-12 transition duration-500\"><Highlighter highlightClassName={highlightClasses} textToHighlight={description} searchWords={this.state.query.split()} /></h1>      \n                        </div>\n                      </div>\n                    </div>\n                  </a>\n                )\n                })}\n          </div>\n         </div>\n        )\n      } \n      // else if (this.state.query.length > 2) {\n      //   return (\n      //     <div className=\"bg-orange-700 text-gray-100 py-2\">No results for {this.state.query}</div>\n      //   )\n          \n      // } else if (this.state.query.length > 0) {\n      //   return (\n      //     <div className=\"bg-orange-700 text-gray-100 py-2\">Please insert at least 3 characters</div>\n      //   )\n      // } \n      else if (this.state.query.length > 0) {\n        return (\n          <div className=\"bg-orange-700 text-gray-100 py-2\">No results for {this.state.query}</div>\n        )\n      }\n      else {\n        return (\n          <div className=\"bg-orange-700 text-gray-100 py-2\">Awaiting for your input ...</div>\n        )\n      }\n    }\n\n    return (\n      <div className={`${this.props.classNames} relative text-gray-700 w-full text-center`}>\n        <div className=\"min-h-60 pt-40 pb-10\" style={{backgroundImage: `url(${bg})`, backgroundSize: \"cover\", width: \"100%\",}}>\n          <Zoom top duration={1000} cascade><p className=\"text-2xl xl:text-3xl text-white mb-3 font-semibold\">Search@dataviz.shef</p></Zoom>\n          <Fade bottom duration={1500}>\n            <div className=\"inline-block focus:outline-none text-gray-600 bg-white shadow p-3 rounded-lg\">\n              <FiSearch className=\"inline-block text-center text-3xl -mt-1\" />\n              <input id=\"pageSearch\" onChange={this.search} onInput={this.search} autoComplete=\"off\" className=\"search__input py-0 pl-4 text-lg focus:outline-none pr-5 text-gray-600\" style={{minWidth: \"25vw\"}} type=\"text\" name=\"search\" placeholder=\"Search title, description, date...\" />\n            </div>\n          </Fade>\n        </div>\n        <div className=\"search__list bg-gray-100\">\n          <ResultList />\n        </div>\n      </div>\n    )\n  }\n\n  getSearchResults(query) {\n    //index - a flexsearch index instance (variables set in gatsby-config)\n    //store - object that stores the indexed gatsby nodes where the id of each node corresponds to the id the filter, according with flexsearch.js best practices (https://github.com/nextapps-de/flexsearch#best-practices)).\n\n    var index = window.__FLEXSEARCH__.en.index\n    var store = window.__FLEXSEARCH__.en.store\n    if (!query || !index) {\n      return []\n    } else {\n      var results = []\n      // search the indexed fields\n      Object.keys(index).forEach(idx => {\n        results.push(...index[idx].values.search({\n          query: query,\n          suggest: true,\n        }))\n      })\n      // find the unique ids of the nodes\n      results = Array.from(new Set(results))\n\n      // return the corresponding nodes in the store\n      var nodes = store\n        .filter(node => (results.includes(node.id) ? node : null))\n        .map(node => node.node)\n\n      return nodes\n    }\n  }\n\n  search = (event) => {\n    const query = event.target.value\n    if (this.state.query.length > -1) {\n      const results = this.getSearchResults(query)\n      this.setState({ results: results, query: query })\n    } else {\n      this.setState({ results: [], query: query })\n    }\n  }\n\n  searchFromHome = (homeQuery) => {\n    const query = homeQuery\n    if (this.state.query.length > -1) {\n      const results = this.getSearchResults(query)\n      this.setState({ results: results, query: query })\n    } else {\n      this.setState({ results: [], query: query })\n    }\n  }\n}\n\nexport default Search\n\n\n\nSearch.propTypes = {\n  classNames: PropTypes.any,\n  data: PropTypes.any,\n  location: PropTypes.any,\n}\n\n\n","import React from \"react\"\nimport SEO from \"../components/shared/seo\"\nimport Header from \"../components/shared/header\"\nimport Footer from \"../components/shared/footer\"\n//import BackgroundSection from \"../components/images/search_background\"\nimport PropTypes from \"prop-types\"\nimport Search from \"../components/shared/search\"\n\n\nconst searchPage = ({location}) => {\n\n  return (\n    <>\n      <SEO \n        title=\"Search\" \n        keywords={[\"the university of sheffield\", \"data visualisation\", \"data visualisation hub\", \"research\", \"dataviz.shef\", \"search dataviz\"]} \n      />\n      <Header />\n      <div className=\"flex flex-wrap\">\n        <Search location={location} />\n      </div>\n      <Footer />\n    </>\n  )\n}\n\nexport default searchPage\n\nsearchPage.propTypes = {\n    data: PropTypes.any,\n    location: PropTypes.any\n  }\n  \n  ","module.exports = __webpack_public_path__ + \"static/no_image_1-cbab1c85fd0b5df4703007ed018da08a.png\";","module.exports = __webpack_public_path__ + \"static/no_image_5-0b0b76e89033963a72b34200d192a851.png\";","module.exports = __webpack_public_path__ + \"static/no_image_2-8588841d1e101e5cd1794737b8392414.png\";","module.exports = __webpack_public_path__ + \"static/no_image_3-5fff908ab0abc7a6edf3a19225c0b9a5.png\";","module.exports = __webpack_public_path__ + \"static/no_image_4-c823d2bf145dd881fe77c9265116b3e8.png\";","import no_image_1 from \"../images/blog/no_image_1.png\"\nimport no_image_2 from \"../images/blog/no_image_2.png\"\nimport no_image_3 from \"../images/blog/no_image_3.png\"\nimport no_image_4 from \"../images/blog/no_image_4.png\"\nimport no_image_5 from \"../images/blog/no_image_5.png\"\n\nexport function shortenText(text, length) {\n  let newText = text ? text.split(\" \").splice(0, length) : \"\"\n  if(newText.length < length){\n    newText = newText.join(\" \")\n  } else {\n    newText = newText.join(\" \").concat(\" ...\")\n  }\n  return newText\n}\n\n// Assign thumbnail if not provided\nexport function getImageSource(node) {\n  let imagesrc\n  if(node.frontmatter && node.frontmatter.thumbnail && node.frontmatter.thumbnail.childImageSharp) {\n    imagesrc = node.frontmatter.thumbnail.childImageSharp.fluid.src \n  } else {\n    let image_set = [no_image_1, no_image_2, no_image_3, no_image_4, no_image_5]\n    imagesrc = image_set[Math.floor(Math.random() * image_set.length)]\n  }\n  return imagesrc\n}\n\n\n\nexport function CopyCode() {\n\n}\n"],"sourceRoot":""}