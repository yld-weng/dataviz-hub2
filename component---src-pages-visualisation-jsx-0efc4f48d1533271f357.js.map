{"version":3,"sources":["webpack://datavizhub-tuos/./src/components/style/visStyle.jsx","webpack://datavizhub-tuos/./src/images/TUOS_PRIMARY_LOGO_LINEAR_BLACK.png","webpack://datavizhub-tuos/./src/pages/visualisation.jsx"],"names":["ShareButton","styled","VisItem","props","row","col","VisDiv","allMdx","data","allMDX","nextPageRef","useRef","i","edges","length","push","Math","floor","random","useState","slice","currentMDXs","setCurrentMDXs","loadNextPage","setLoadNextPage","hasNextPage","setHasNextPage","useEffect","refObserver","IntersectionObserver","entries","isIntersecting","console","log","root","rootMargin","threshold","current","observe","hasNext","addMoreVisBox","document","querySelector","style","visibility","parentElement","appendChild","nextPageMDX","title","keywords","className","background","WebkitBackgroundClip","WebkitTextFillColor","MozBackgroundClip","MozTextFillColor","gridAutoFlow","gridTemplateRows","map","node","imagesrc","getImageSource","rowSpan","frontmatter","columnSpan","Link","to","fields","slug","key","id","gridRow","gridColumn","src","UniversityIcon","maxWidth","left","top","transform","delay","height","width","backgroundImage","backgroundRepeat","objectFit","objectPosition","transition","alt","ref"],"mappings":"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","file":"component---src-pages-visualisation-jsx-0efc4f48d1533271f357.js","sourcesContent":["import styled from \"styled-components\"\r\n\r\nexport const ShareButton = styled.div`\r\n  a {\r\n    margin: 0\r\n  }\r\n`\r\n\r\nexport const VisItem = styled.div`\r\n  display: block;\r\n  height: 100%;\r\n  width: 100%;\r\n  position: relative;\r\n\r\n  ${props => {\r\n    if (props.row == 1 && props.col > 1) {\r\n      return `\r\n        padding-bottom: calc(100% / ${props.col});\r\n      `\r\n    }\r\n    if (props.col == 1 && props.row > 1) {\r\n      return `\r\n        padding-bottom: calc(${props.row} * 100%);\r\n      `\r\n    }\r\n    if (props.col != 1 && props.row != 1) {\r\n      return `\r\n        padding-bottom: calc(${props.row} / ${props.col} * 100%);\r\n      `\r\n    }\r\n\r\n    return `\r\n      padding-bottom: 100%;\r\n    `\r\n  }}\r\n\r\n  @media screen and (max-width: 768px) {\r\n    padding-bottom: inherit;\r\n  }\r\n`\r\n\r\nexport const VisDiv = styled.div`\r\n  max-width: 550px;\r\n  margin: auto;\r\n`","export default __webpack_public_path__ + \"static/TUOS_PRIMARY_LOGO_LINEAR_BLACK-9dc28511e805e147ad2507cb69b5c261.png\";","import React, { useState, useRef, useEffect } from \"react\"\r\nimport SEO from \"../components/shared/seo\"\r\nimport { graphql, Link } from \"gatsby\"\r\nimport PropTypes from \"prop-types\"\r\n//import { shortenText } from \"../utils/shared\"\r\nimport { getImageSource } from \"../utils/shared\"\r\nimport { VisItem } from \"../components/style/visStyle\"\r\nimport Fade from 'react-reveal/Fade';\r\nimport UniversityIcon from \"../images/TUOS_PRIMARY_LOGO_LINEAR_BLACK.png\"\r\n\r\nconst Visualisation = ({data: {allMdx} }) => {\r\n  const allMDX = [];\r\n  const nextPageRef = useRef();\r\n  const PAGE_LENGTH = 10;\r\n\r\n  for(let i = 0; i < allMdx.edges.length; ++i){\r\n    allMDX.push(allMdx.edges[i]);\r\n    allMDX.push(allMdx.edges[Math.floor(Math.random() *allMdx.edges.length)]);\r\n    allMDX.push(allMdx.edges[Math.floor(Math.random() *allMdx.edges.length)]);\r\n    allMDX.push(allMdx.edges[Math.floor(Math.random() *allMdx.edges.length)]);\r\n    allMDX.push(allMdx.edges[Math.floor(Math.random() *allMdx.edges.length)]);\r\n  }\r\n\r\n  const [currentMDXs, setCurrentMDXs] = useState([...allMDX.slice(0, PAGE_LENGTH)]);\r\n  const [loadNextPage, setLoadNextPage] = useState(false);\r\n  const [hasNextPage, setHasNextPage] = useState(allMDX.length > PAGE_LENGTH);\r\n\r\n  // Check if observed the loadNextPage element\r\n  // https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver\r\n  useEffect(() => {\r\n    const options = {\r\n      root: null,\r\n      rootMargin: \"0px 0px 10px 0px\",\r\n      threshold: 0.7,\r\n    }\r\n    const refObserver = new IntersectionObserver((entries) => {\r\n      if (entries[0].isIntersecting) {\r\n        setLoadNextPage(true);\r\n        console.log(\"Observed!\")\r\n      }\r\n    }, options);\r\n\r\n    if (nextPageRef.current) {\r\n      refObserver.observe(nextPageRef.current);\r\n    }\r\n  }, []);\r\n\r\n\r\n  // Monitor remaining visualisations on update of visualisation objects\r\n  useEffect(() => {\r\n    const hasNext = allMDX.length > currentMDXs.length;\r\n    setHasNextPage(hasNext);\r\n\r\n    if (!hasNext) {\r\n      const addMoreVisBox = document.querySelector('#visualisation-invite');\r\n      addMoreVisBox.style.visibility = 'visible';\r\n      addMoreVisBox.parentElement.appendChild(addMoreVisBox);\r\n    }\r\n  },[currentMDXs])\r\n\r\n\r\n  // Load more visualisations objects\r\n  useEffect(() => {\r\n    // load more only if intended too & there are more objects\r\n    if (!loadNextPage || !hasNextPage) {\r\n      return;\r\n    }\r\n\r\n    // Get next page content\r\n    const moreMDX = allMDX.length > currentMDXs.length;\r\n    const nextPageMDX = moreMDX ? allMDX.slice(currentMDXs.length, currentMDXs.length + PAGE_LENGTH) : [];\r\n    \r\n    // Merge into current content\r\n    setCurrentMDXs([...currentMDXs, ...nextPageMDX]);\r\n    setLoadNextPage(false);\r\n  }, [loadNextPage, hasNextPage])\r\n\r\n  return(\r\n    <>\r\n      <SEO \r\n        title=\"Visualisation\" \r\n        keywords={[\"the university of sheffield\", \"data visualisation\", \"data visualisation hub\", \"research\", \"about dataviz\"]} \r\n      />\r\n      <div className=\"bg-gray-900 w-full py-36 text-center\">\r\n        <h1 \r\n          className=\"w-full py-3 text-6xl font-extrabold\" \r\n          style={{\r\n            background: '-webkit-linear-gradient(225deg, rgba(255,121,180,1) 20%, rgba(255,134,250,1) 40%, rgba(41,197,255,1) 65%)', \r\n            WebkitBackgroundClip: 'text', \r\n            WebkitTextFillColor: 'transparent',\r\n            MozBackgroundClip: 'text',\r\n            MozTextFillColor: 'transparent'\r\n          }}\r\n        >\r\n          InfoVis\r\n        </h1> \r\n        <h3 className=\"text-gray-500\">The latest from the University of Sheffield.</h3>\r\n      </div>\r\n      <div className=\"min-h-100 flex flex-wrap justify-center pt-12 pb-32 bg-gray-900 px-5\">\r\n        <div \r\n          className=\"max-w-8xl w-full md:grid md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-1\"\r\n          style={{gridAutoFlow: 'dense', gridTemplateRows: 'min-content'}}\r\n        >\r\n          {currentMDXs.length > 0 && currentMDXs.map(({ node }) => {\r\n            let imagesrc = getImageSource(node, true);\r\n            let rowSpan = node.frontmatter.rowSpan ?? 1;\r\n            let columnSpan = node.frontmatter.columnSpan ?? 1;\r\n\r\n            return (\r\n              <Link \r\n                to={node.fields.slug} \r\n                key={node.id} \r\n                style={{gridRow: `span ${rowSpan}`, gridColumn: `span ${columnSpan}`}}\r\n                className=\"shadow-xl rounded-xl visualisationColourBorder\"\r\n              >\r\n                {/* university logo on loading */}\r\n                <img \r\n                  src={UniversityIcon} \r\n                  style={{maxWidth: '100px', left: '50%', top: '50%', transform: 'translate(-50%, -50%)'}} \r\n                  className=\"absolute\"\r\n                  />\r\n                {/* visualisation */}\r\n                <Fade delay={1000}>\r\n                  <VisItem row={rowSpan} col={columnSpan}>\r\n                    <div \r\n                      className=\"rounded-xl md:absolute md:top-0 md:left-0\"  \r\n                      style={{height: '100%', width: '100%', backgroundImage: `linear-gradient(135deg, #141e30 0%,#152033 6%,#20344c 65%,#243b55 100%)`, backgroundRepeat: 'no-repeat'}}\r\n                    >\r\n                      <img \r\n                        style={{height: '100%', width: '100%', objectFit: 'cover', objectPosition: 'center', transition: '.2s ease-out'}} \r\n                        className=\"rounded-xl\" \r\n                        src={imagesrc} \r\n                        alt={\"Visualisation: \" + node.frontmatter.title} \r\n                      />\r\n                    </div>\r\n                  </VisItem>\r\n                </Fade>\r\n              </Link>\r\n            )\r\n\r\n          })} \r\n          <div\r\n            id=\"visualisation-invite\"\r\n            style={{gridRow: 'span 1', gridColumn: 'span 1', visibility: 'hidden'}}\r\n          >\r\n            <Fade delay={1000}>\r\n              <VisItem row={1} col={1}>\r\n                <div \r\n                  className=\"group rounded-xl relative md:absolute md:top-0 md:left-0 text-center flex\"  \r\n                  style={{height: '100%', width: '100%', backgroundImage: 'linear-gradient(135deg, #141e30 0%,#152033 6%,#20344c 65%,#243b55 100%)', backgroundRepeat: 'no-repeat'}}\r\n                >\r\n                  <h1 className=\"text-gray-300 font-bold m-auto\">Add your visualisations here</h1>\r\n                  <Link \r\n                    to=\"\"\r\n                    className=\"absolute text-sm text-gray-200 font-bold cursor-pointer bg-gray-600 rounded-md py-1 px-2 hidden group-hover:block\" \r\n                    style={{transform: 'translate(-50%, 0%)', left: '50%', top: '70%'}}>\r\n                      Learn how\r\n                  </Link>\r\n                </div>\r\n              </VisItem>\r\n            </Fade>\r\n          </div>\r\n        </div>\r\n        <div ref={nextPageRef} style={{height: '100px', width: '100%'}}></div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Visualisation\r\n\r\nVisualisation.propTypes = {\r\n  data: PropTypes.any,\r\n}\r\n\r\n\r\nexport const query = graphql`\r\n\tquery visualisationList {\r\n\t\tallMdx(\r\n\t\t\tfilter: { frontmatter: { type: { eq: \"visualisation\" }} }\r\n\t\t\tsort: { fields: [frontmatter___date], order: DESC }\r\n\t\t) {\r\n      edges {\r\n        node {\r\n          id\r\n          frontmatter {\r\n            description\r\n            tag\r\n            thumbnail {\r\n              childImageSharp {\r\n                gatsbyImageData(placeholder: BLURRED, layout: FULL_WIDTH)\r\n              }\r\n            }\r\n            d3\r\n            date(formatString: \"DD MMMM YYYY\")\r\n            author {\r\n              name\r\n              avatar {\r\n                childImageSharp {\r\n                  gatsbyImageData(placeholder: BLURRED, layout: FULL_WIDTH)\r\n                }\r\n              }\r\n            }\r\n            category\r\n            title\r\n            featured\r\n            type\r\n            rowSpan\r\n            columnSpan\r\n          }\r\n          fields {\r\n            slug\r\n            readingTime {\r\n              text\r\n            }\r\n          }\r\n        }\r\n      }\r\n\t\t}\r\n\t}\r\n`"],"sourceRoot":""}